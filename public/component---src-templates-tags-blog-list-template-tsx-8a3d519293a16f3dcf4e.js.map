{"version":3,"file":"component---src-templates-tags-blog-list-template-tsx-8a3d519293a16f3dcf4e.js","mappings":"4KAMA,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,MAAV,sEAAGD,CAAH,iPAQTE,EAAAA,GAAAA,EAAS;;OAaTC,EAAeH,EAAAA,GAAAA,IAAAA,WAAH,8DAAGA,CAAH,sEAKdE,EAAAA,GAAAA,EAAS;;KAIPE,EAAOJ,EAAAA,GAAAA,IAAAA,WAAH,sDAAGA,CAAH,qDAINE,EAAAA,GAAAA,EAAS;;;;KAMPG,EAAQL,EAAAA,GAAAA,GAAAA,WAAH,uDAAGA,CAAH,oHAKPE,EAAAA,GAAAA,EAAS;;IAGTH,GAIEO,EAAON,EAAAA,GAAAA,EAAAA,WAAH,sDAAGA,CAAH,wEAOJO,EAAUP,EAAAA,GAAAA,EAAAA,WAAH,yDAAGA,CAAH,sCAGTE,EAAAA,GAAAA,EAAS;;KAKb,IAAeM,GACb,gBAACT,EAAD,CAAWU,GAAID,EAAME,KAAKC,MACxB,2BACE,gBAACR,EAAD,KACE,gBAAC,EAAAS,EAAD,CAAaC,IAAM,GAAEL,EAAME,KAAKI,cAAeC,MAAOP,EAAME,KAAKM,aAEnE,gBAACZ,EAAD,KACE,gBAACC,EAAD,KAAQG,EAAME,KAAKI,OACnB,gBAACR,EAAD,KACE,wBAAMW,SAAS,oBAAoBT,EAAME,KAAKQ,KAA9C,KADF,KAEYV,EAAME,KAAKS,WAFvB,aAIA,gBAACZ,EAAD,KAAUC,EAAME,KAAKU,a,2GC5E7B,MAAMC,EAAerB,EAAAA,GAAAA,IAAAA,WAAH,6EAAGA,CAAH,yDA+ElB,UAzEqBQ,IACnB,MAAMc,EAAUC,GAAAA,CAAIf,EAAO,uBACrBgB,EAAOD,GAAAA,CAAIf,EAAO,oBAClBM,EAAS,IAAEW,EAAAA,EAAAA,GAAgBD,YAC3BE,EAAQlB,EAAME,KAAKiB,OAAOC,OAAS,GACnCC,EAAUrB,EAAME,KAAKoB,KAAKC,aAAaF,QAC7C,OACE,gBAAC,IAAD,CAAQG,SAAUxB,EAAMwB,SAAUC,OAAQC,EAAAA,EAAAA,MACxC,uBAAKC,UAAU,OAAOC,MAAO,CAAEC,UAAW,KACxC,gBAAC,IAAD,CAAKvB,MAAOA,EAAOwB,IAAM,GAAET,eAAqBP,MAChD,gBAACD,EAAD,KACGK,EAAMa,KAAI,EAAGC,KAAAA,OACRA,EAAKC,YAAYC,WAEjB,gBAAC,IAAD,CACEhC,KAAM,CACJI,MAAO0B,EAAKC,YAAY3B,MACxBE,UAAWwB,EAAKC,YAAY1B,MAAM4B,gBAAgBC,gBAClDxB,QAASoB,EAAKC,YAAYI,aAAeL,EAAKpB,QAC9CF,KAAMsB,EAAKC,YAAYvB,KACvBP,KAAO,IAAG6B,EAAKM,OAAOC,QAExBC,IAAKR,EAAKC,YAAYM","sources":["webpack://personal-website/./src/components/Card.tsx","webpack://personal-website/./src/templates/TagsBlogListTemplate.tsx"],"sourcesContent":["import { Link } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { media } from '../styles'\r\n\r\nconst Container = styled(Link)`\r\n  & > div {\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: left;\r\n    flex-direction: column;\r\n    border-bottom: 1px solid rgb(221, 221, 221);\r\n    padding: 2rem 0px;\r\n    ${media.md`\r\n      flex-direction: row;\r\n    `} * {\r\n      margin: 0;\r\n    }\r\n  }\r\n  &:first-child {\r\n    & > div {\r\n      border-top: 1px solid rgb(221, 221, 221);\r\n    }\r\n  }\r\n  text-decoration: none;\r\n`\r\nconst ImageWrapper = styled.div`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  ${media.md`\r\n    width: 25%;\r\n  `};\r\n`\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  max-width: 560px;\r\n  padding-top: 12px;\r\n  ${media.md`\r\n    padding: 0 0 0 50px;\r\n    width: 75%;\r\n    max-width: 100%;\r\n  `};\r\n`\r\nconst Title = styled.h3`\r\n  font-family: 'Open Sans', sans-serif;\r\n  color: #282a2d;\r\n  transition: 0.3s;\r\n  font-size: 17px;\r\n  ${media.sm`\r\n    font-size: 1.1rem;\r\n  `}\r\n  ${Container}:hover & {\r\n    color: #1976d2;\r\n  }\r\n`\r\nconst Time = styled.p`\r\n  color: #757575;\r\n  font-size: 14px;\r\n  text-align: right;\r\n  padding: 6px 6px 6px;\r\n`\r\n\r\nconst Excerpt = styled.p`\r\n  color: #757575;\r\n  font-size: 15px;\r\n  ${media.sm`\r\n    font-size: 0.9rem;\r\n  `};\r\n`\r\n\r\nexport default props => (\r\n  <Container to={props.data.path}>\r\n    <div>\r\n      <ImageWrapper>\r\n        <GatsbyImage alt={`${props.data.title} image`} image={props.data.thumbnail} />\r\n      </ImageWrapper>\r\n      <Info>\r\n        <Title>{props.data.title}</Title>\r\n        <Time>\r\n          <time dateTime=\"2008-02-14 20:00\">{props.data.date} </time>\r\n          &middot; {props.data.timeToRead} min read\r\n        </Time>\r\n        <Excerpt>{props.data.excerpt}</Excerpt>\r\n      </Info>\r\n    </div>\r\n  </Container>\r\n)\r\n","import { graphql } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport Card from '../components/Card'\r\nimport Layout from '../components/Layout'\r\nimport SEO from '../components/SEO'\r\nimport { pages, preferSpacedTag } from '../utils'\r\n\r\nconst PostsWrapper = styled.div`\r\n  padding: 0 15px;\r\n  max-width: 1060px;\r\n  margin: 0 auto 35px;\r\n`\r\n\r\nconst BlogWithTags = props => {\r\n  const tagSlug = get(props, 'pageContext.tagSlug')\r\n  const tags = get(props, 'pageContext.tags')\r\n  const title = `${preferSpacedTag(tags)} - Blog`\r\n  const posts = props.data.allMdx.edges || []\r\n  const siteUrl = props.data.site.siteMetadata.siteUrl\r\n  return (\r\n    <Layout location={props.location} active={pages.blog}>\r\n      <div className=\"Blog\" style={{ marginTop: 40 }}>\r\n        <SEO title={title} url={`${siteUrl}/blog/tags/${tagSlug}`} />\r\n        <PostsWrapper>\r\n          {posts.map(({ node }) => {\r\n            if (node.frontmatter.published)\r\n              return (\r\n                <Card\r\n                  data={{\r\n                    title: node.frontmatter.title,\r\n                    thumbnail: node.frontmatter.image.childImageSharp.gatsbyImageData,\r\n                    excerpt: node.frontmatter.description || node.excerpt,\r\n                    date: node.frontmatter.date,\r\n                    path: `/${node.fields.slug}`,\r\n                  }}\r\n                  key={node.frontmatter.slug}\r\n                />\r\n              )\r\n            else return false\r\n          })}\r\n        </PostsWrapper>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const queryBlog = graphql`\r\n  query QueryBlogList($tags: [String]) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        siteUrl\r\n      }\r\n    }\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {\r\n        frontmatter: { tags: { in: $tags }, model: { eq: \"post\" }, published: { eq: true } }\r\n      }\r\n      limit: 100\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 240)\r\n          timeToRead\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            title\r\n            description\r\n            slug\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: CONSTRAINED, placeholder: TRACED_SVG)\r\n              }\r\n            }\r\n            published\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogWithTags"],"names":["Container","styled","Link","media","ImageWrapper","Info","Title","Time","Excerpt","props","to","data","path","G","alt","title","image","thumbnail","dateTime","date","timeToRead","excerpt","PostsWrapper","tagSlug","get","tags","preferSpacedTag","posts","allMdx","edges","siteUrl","site","siteMetadata","location","active","pages","className","style","marginTop","url","map","node","frontmatter","published","childImageSharp","gatsbyImageData","description","fields","slug","key"],"sourceRoot":""}