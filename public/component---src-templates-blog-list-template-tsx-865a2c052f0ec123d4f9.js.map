{"version":3,"file":"component---src-templates-blog-list-template-tsx-865a2c052f0ec123d4f9.js","mappings":"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","sources":["webpack://personal-website/./src/components/Card.tsx","webpack://personal-website/./src/assets/images/logo.png","webpack://personal-website/./src/components/SEO.tsx","webpack://personal-website/./src/components/Pagination/PaginationItem.tsx","webpack://personal-website/./src/components/Pagination/PaginationSeparator.tsx","webpack://personal-website/./src/components/Pagination/ButtonNextPrev.tsx","webpack://personal-website/./src/components/Pagination/Pagination.tsx","webpack://personal-website/./src/components/Pagination/index.tsx","webpack://personal-website/./src/templates/BlogListTemplate.tsx","webpack://personal-website/./src/utils/index.ts"],"sourcesContent":["import { Link } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { media } from '../styles'\r\n\r\nconst Container = styled(Link)`\r\n  & > div {\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: left;\r\n    flex-direction: column;\r\n    border-bottom: 1px solid rgb(221, 221, 221);\r\n    padding: 2rem 0px;\r\n    ${media.md`\r\n      flex-direction: row;\r\n    `} * {\r\n      margin: 0;\r\n    }\r\n  }\r\n  &:first-child {\r\n    & > div {\r\n      border-top: 1px solid rgb(221, 221, 221);\r\n    }\r\n  }\r\n  text-decoration: none;\r\n`\r\nconst ImageWrapper = styled.div`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  ${media.md`\r\n    width: 25%;\r\n  `};\r\n`\r\nconst Info = styled.div`\r\n  width: 100%;\r\n  max-width: 560px;\r\n  padding-top: 12px;\r\n  ${media.md`\r\n    padding: 0 0 0 50px;\r\n    width: 75%;\r\n    max-width: 100%;\r\n  `};\r\n`\r\nconst Title = styled.h3`\r\n  font-family: 'Open Sans', sans-serif;\r\n  color: #282a2d;\r\n  transition: 0.3s;\r\n  font-size: 17px;\r\n  ${media.sm`\r\n    font-size: 1.1rem;\r\n  `}\r\n  ${Container}:hover & {\r\n    color: #1976d2;\r\n  }\r\n`\r\nconst Time = styled.p`\r\n  color: #757575;\r\n  font-size: 14px;\r\n  text-align: right;\r\n  padding: 6px 6px 6px;\r\n`\r\n\r\nconst Excerpt = styled.p`\r\n  color: #757575;\r\n  font-size: 15px;\r\n  ${media.sm`\r\n    font-size: 0.9rem;\r\n  `};\r\n`\r\n\r\nexport default props => (\r\n  <Container to={props.data.path}>\r\n    <div>\r\n      <ImageWrapper>\r\n        <GatsbyImage alt={`${props.data.title} image`} image={props.data.thumbnail} />\r\n      </ImageWrapper>\r\n      <Info>\r\n        <Title>{props.data.title}</Title>\r\n        <Time>\r\n          <time dateTime=\"2008-02-14 20:00\">{props.data.date} </time>\r\n          &middot; {props.data.timeToRead} min read\r\n        </Time>\r\n        <Excerpt>{props.data.excerpt}</Excerpt>\r\n      </Info>\r\n    </div>\r\n  </Container>\r\n)\r\n","export default __webpack_public_path__ + \"static/logo-4f6ab1127a54ca4527a23d2f7538cb98.png\";","import PropTypes from 'prop-types'\r\nimport React, { PureComponent } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport avatar from '../assets/images/logo.png'\r\n\r\nexport default class SEO extends React.PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    image: PropTypes.string,\r\n    url: PropTypes.string,\r\n    description: PropTypes.string,\r\n    isPost: PropTypes.bool,\r\n  }\r\n\r\n  static defaultProps = {\r\n    title: 'Joshua Stamps',\r\n    image: `https://jstamps.dev${avatar}`,\r\n    url: 'https://jstamps.dev/',\r\n    description: 'Joshua Stamps - Software Engineer',\r\n    isPost: false,\r\n  }\r\n\r\n  render() {\r\n    const { image, url, description, isPost } = this.props\r\n    const title = (this.props.title === '' ? '' : `${this.props.title} Â· `) + 'Joshua Stamps'\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        '@context': 'http://schema.org',\r\n        '@type': 'WebSite',\r\n        sameAs: [\r\n          'https://twitter.com/stamps_dev',\r\n          'https://plus.google.com/u/0/101542534057875808813',\r\n          'https://www.github.com/jstamps91',\r\n          'https://www.linkedin.com/in/joshua-stamps',\r\n        ],\r\n        url: url,\r\n        name: title,\r\n        alternateName: description,\r\n      },\r\n    ]\r\n\r\n    if (isPost) {\r\n      schemaOrgJSONLD.push([\r\n        {\r\n          '@context': 'http://schema.org',\r\n          '@type': 'BreadcrumbList',\r\n          sameAs: [\r\n            'https://twitter.com/stamps_dev',\r\n            'https://plus.google.com/u/0/101542534057875808813',\r\n            'https://www.github.com/jstamps91',\r\n            'https://www.linkedin.com/in/joshua-stamps',\r\n          ],\r\n          itemListElement: [\r\n            {\r\n              '@type': 'ListItem',\r\n              position: 1,\r\n              item: {\r\n                '@id': url,\r\n                name: title,\r\n                image: image,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          '@context': 'http://schema.org',\r\n          '@type': 'BlogPosting',\r\n          sameAs: [\r\n            'https://twitter.com/stamps_dev',\r\n            'https://plus.google.com/',\r\n            'https://www.github.com/jstamps91',\r\n            'https://www.linkedin.com/in/joshua-stamps',\r\n          ],\r\n          url: url,\r\n          name: title,\r\n          alternateName: `${url} | Joshua Stamps`,\r\n          headline: title,\r\n          image: {\r\n            '@type': 'ImageObject',\r\n            url: image,\r\n          },\r\n          description,\r\n        },\r\n      ])\r\n    }\r\n\r\n    return (\r\n      <Helmet>\r\n        <title>{title}</title>\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n        <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\r\n\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:site\" content=\"@stamps_dev\" />\r\n        <meta name=\"twitter:creator\" content=\"@stamps_dev\" />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    )\r\n  }\r\n}\r\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst ButtonPage = styled(Link)`\n  width: 36px;\n  height: 36px;\n  color: #4d4d4d;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-weight: bold;\n  font-size: 16px;\n  transition: 0.3s;\n  border-radius: 50%;\n  &:hover {\n    background: #91caf75e;\n  }\n  ${props =>\n    props.selected &&\n    css`\n      && {\n        background: #3f86f5;\n        color: white;\n      }\n    `};\n  span {\n    line-height: 14px;\n    position: relative;\n  }\n`\n\nfunction PaginationItem({ selected, index }) {\n  return (\n    <div>\n      <ButtonPage\n        selected={selected}\n        to={`/blog${index ? `/page/${index}` : ''}`}\n        disabled={selected}\n      >\n        <span>{index}</span>\n      </ButtonPage>\n    </div>\n  )\n}\n\nPaginationItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n}\n\nexport { PaginationItem }\n","import React from 'react'\n\nconst PaginationSeparator = React.memo(function PaginationSeparator() {\n  return (\n    <div\n      css={`\n        display: flex;\n        width: 16px;\n        height: 36px;\n        margin: 0;\n        align-items: center;\n        justify-content: center;\n      `}\n    >\n      <img\n        css={`\n          margin: 0;\n          top: 5px;\n          position: relative;\n        `}\n        alt=\"ellipsis\"\n        src=\"https://icongr.am/clarity/ellipsis-horizontal.svg?size=16&color=4d4d4d\"\n      />\n    </div>\n  )\n})\n\nexport { PaginationSeparator }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst imageSrc = 'https://icongr.am/clarity/arrow.svg?size=24&color=bebebe'\n\nconst Button = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  margin: 0 20px;\n  transition: 0.3s;\n  visibility: ${props => (props.hide ? 'hidden' : 'inherit')};\n  p {\n    font-weight: bold;\n    margin: 0;\n    color: #4d4d4d;\n  }\n  img {\n    transition: 0.4s;\n    transform: rotate(${props => (props.isnext === 'true' ? '90deg' : '-90deg')});\n    margin: 0 3px;\n  }\n\n  &:hover {\n    img {\n      transform: rotate(${props => (props.isnext === 'true' ? '90deg' : '-90deg')}) translateY(-3px);\n    }\n  }\n`\n\nconst ButtonNextPrev = ({ isnext = true, toIndex, hide }) => {\n  return (\n    <Button\n      isnext={isnext.toString()}\n      hide={hide ? 1 : 0}\n      to={`/blog${toIndex ? `/page/${toIndex}` : ''}`}\n    >\n      {!isnext && <img alt=\"Prev Page\" src={imageSrc} />}\n      <p>{isnext ? 'NEXT' : 'PREV'}</p>\n      {isnext && <img alt=\"Next Page\" src={imageSrc} />}\n    </Button>\n  )\n}\n\nexport default ButtonNextPrev\n","import React from 'react'\r\nimport { GU } from './contants'\r\nimport { PaginationItem } from './PaginationItem'\r\nimport { PaginationSeparator } from './PaginationSeparator'\r\nimport ButtonNextPrev from './ButtonNextPrev'\r\n\r\nfunction paginationItems(pages, selected) {\r\n  const all = [...Array(pages)].map((_, i) => i)\r\n\r\n  if (all.length < 6) {\r\n    return all\r\n  }\r\n\r\n  const first = 0\r\n  const last = all.length - 1\r\n  const prev = Math.min(all.length, Math.max(0, selected - 1))\r\n  const next = Math.min(all.length, Math.max(0, selected + 1))\r\n\r\n  const items = []\r\n\r\n  // Selected item + previous + next\r\n  items.push(...all.slice(prev, next + 1))\r\n\r\n  // Display three items, even if the first / last one is selected\r\n  if (selected === last) {\r\n    items.unshift(last - 2)\r\n  }\r\n  if (selected === first) {\r\n    items.push(first + 2)\r\n  }\r\n\r\n  // Ellipsises\r\n  if (prev > first + 1) {\r\n    items.unshift(-1)\r\n  }\r\n  if (next < last - 1) {\r\n    items.push(-1)\r\n  }\r\n\r\n  // Always display the first & last items\r\n  if (prev >= first + 1) {\r\n    items.unshift(all[0])\r\n  }\r\n  if (next <= last - 1) {\r\n    items.push(all[all.length - 1])\r\n  }\r\n\r\n  return items\r\n}\r\n\r\nconst Pagination = React.memo(function Pagination({\r\n  pages,\r\n  selected,\r\n  onChange,\r\n  touchMode,\r\n  hasNextPage,\r\n  hasPrevPage,\r\n  ...props\r\n}) {\r\n  const items = paginationItems(pages, selected)\r\n  return (\r\n    <div\r\n      css={`\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        margin-top: 10px;\r\n        padding: ${2 * GU}px 0;\r\n      `}\r\n      {...props}\r\n    >\r\n      <ButtonNextPrev hide={!hasPrevPage} toIndex={selected - 1} isnext={false} />\r\n      <div\r\n        css={`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          & > div + div {\r\n            margin: 0 3px;\r\n          }\r\n        `}\r\n      >\r\n        {items.map((pageIndex, i) =>\r\n          pageIndex === -1 ? (\r\n            <PaginationSeparator key={`separator-${i}`} />\r\n          ) : (\r\n            <PaginationItem\r\n              key={pageIndex}\r\n              index={pageIndex}\r\n              selected={selected === pageIndex}\r\n              onChange={onChange}\r\n              touchMode={touchMode}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n      <ButtonNextPrev hide={!hasNextPage} toIndex={selected + 1} isnext={true} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport { Pagination }\r\n","import { Pagination } from './Pagination'\n\nexport default Pagination\n","import { graphql } from 'gatsby'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport Card from '../components/Card'\r\nimport Layout from '../components/Layout'\r\nimport Pagination from '../components/Pagination'\r\nimport SEO from '../components/SEO'\r\nimport { pages } from '../utils'\r\n\r\nconst PostsWrapper = styled.div`\r\n  padding: 0 15px;\r\n  max-width: 800px;\r\n  margin: 0 auto 35px;\r\n`\r\n\r\nfunction Blog(props) {\r\n  const posts = props.data.allMdx.edges || []\r\n  const siteUrl = props.data.site.siteMetadata.siteUrl\r\n\r\n  const { currentPage, numPages, hasNextPage, hasPrevPage } = props.pageContext\r\n\r\n  return (\r\n    <Layout location={props.location} active={pages.blog}>\r\n      <div className=\"Blog\" style={{ marginTop: 90 }}>\r\n        <SEO title=\"Blog\" url={`${siteUrl}/blog`} />\r\n        <PostsWrapper>\r\n          {posts.map(({ node }, index) => {\r\n            console.log(node.frontmatter)\r\n            if (node.frontmatter.published)\r\n              return (\r\n                <Card\r\n                  data={{\r\n                    title: node.frontmatter.title,\r\n                    thumbnail: node.frontmatter.image.childImageSharp.gatsbyImageData,\r\n                    excerpt: node.frontmatter.description || node.excerpt,\r\n                    date: node.frontmatter.date,\r\n                    path: `/${node.fields.slug}`,\r\n                  }}\r\n                  key={index}\r\n                />\r\n              )\r\n            else return false\r\n          })}\r\n          <Pagination\r\n            pages={numPages}\r\n            selected={currentPage}\r\n            hasNextPage={hasNextPage}\r\n            hasPrevPage={hasPrevPage}\r\n          />\r\n        </PostsWrapper>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const queryBlog = graphql`\r\n  query QueryTagBlogList($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        siteUrl\r\n      }\r\n    }\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { model: { eq: \"post\" }, published: { eq: true } } }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 240)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            slug\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: CONSTRAINED, placeholder: TRACED_SVG)\r\n              }\r\n            }\r\n            published\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Blog","export const pages = {\r\n  home: '',\r\n  blog: 'Blog',\r\n  about: 'About',\r\n  portfolio: 'Portfolio',\r\n  contact: 'Contact',\r\n}\r\n\r\nexport const preferSpacedTag = tags => {\r\n  for (const tag of tags) {\r\n    if (!tag.includes(` `)) {\r\n      return tag\r\n    }\r\n  }\r\n  return tags[0]\r\n}\r\n"],"names":["Container","styled","Link","media","ImageWrapper","Info","Title","Time","Excerpt","props","to","data","path","G","alt","title","image","thumbnail","dateTime","date","timeToRead","excerpt","SEO","render","url","description","isPost","this","schemaOrgJSONLD","sameAs","name","alternateName","push","itemListElement","position","item","headline","Helmet","content","type","JSON","stringify","React","defaultProps","avatar","ButtonPage","selected","css","PaginationItem","index","disabled","PaginationSeparator","src","imageSrc","Button","hide","isnext","toIndex","toString","Pagination","pages","onChange","touchMode","hasNextPage","hasPrevPage","items","all","Array","map","_","i","length","last","prev","Math","min","max","next","slice","unshift","first","paginationItems","pageIndex","key","PostsWrapper","posts","allMdx","edges","siteUrl","site","siteMetadata","currentPage","numPages","pageContext","Layout","location","active","className","style","marginTop","node","console","log","frontmatter","published","Card","childImageSharp","gatsbyImageData","fields","slug","home","blog","about","portfolio","contact","preferSpacedTag","tags","tag","includes"],"sourceRoot":""}